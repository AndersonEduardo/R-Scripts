###SEGUNDA PARTE: amostragem de pontos de ocorrencia em diferentes camadas de tempo###

caminhosCamadasTemp = list.files(path=envVarFolder, full.names=T) #lista com os caminhos das camadas no sistema (comp.)
projectFolder = "/home/anderson/Documentos/Projetos/Sps artificiais/" #pasta do projeto
mainSampleFolder = '/home/anderson/Documentos/Projetos/Sps artificiais/Amostras/' #caminho para pasta onde a planilha com os pontos amostrados sera salva
AmSulShape = readShapePoly("/home/anderson/PosDoc/Am_Sul/borders.shp") #shape da America do Sul
biomodFolder = '/home/anderson/Documentos/Projetos/Sps artificiais/biomod/' #pasta para resultados do maxent
spsTypes = c('spHW', 'spHD', 'spCD') #nomes das especies

############################

sampleSizes = c(5,15,25,35,45,55,65,75,85,95)
Tmax = 23

for (i in 1:length(spsTypes)){ #loop sobre os 'tipos de especies'
    for (sSize in sampleSizes){
        sampledAges = vector()
        sampledAges = round(runif(sSize,0,Tmax))

        nicheRealFolder = paste(projectFolder,'NichoReal/',spsTypes[i],sep='') #pasta com os mapas de nicho real da sp
        nicheRealPath = list.files(path=nicheRealFolder, full.names=TRUE, pattern='.asc') #lista com os enderecos dos mapas de distribuicao da
        amostra_i = data.frame()
        for (sAge in sampledAges){
            amostra_i = rbind(amostra_i,sampleOccurrences(x=raster(nicheRealPath[sAge]),n=1,plot=FALSE)$sample.points)[,1:2] #realizando a amostragem
            
            layers_i = extract(
                         x=stack(list.files(path=paste(envVarFolder,'dados_projeto/000',sep=''), pattern='asc', full.names=TRUE)),
                         y=amostra_i[nrow(amostra_i),]
            )

            amostra = cbind(amostra_i,layers_i,sAge)
            
        }
    
}


for(g in 1:10){ #loop para replicar a 'amostragem de pontos fosseis'
    for (h in 1:length(spsTypes)){ #loop sobre os 'tipos de especies'
        nicheRealFolder = paste(projectFolder,'NichoReal/',spsTypes[h],sep='') #pasta com os mapas de nicho real da sp
        nicheRealPath = list.files(path=nicheRealFolder, full.names=T, pattern='.asc') #lista com os enderecos dos mapas de distribuicao da sp
        for (j in 1:length(Npres)){ #loop sobre os cenarios de amostragem para o presente
            for (k in 1:length(Npass)){ #loop sobre os cenarios de amostragem para o passado
                amostra = data.frame()
                for (i in 1:length(nicheRealPath[1:24])){ #loop sobre o numero de camadas de tempo a serem amostradas
                    realNicheMap = raster(nicheRealPath[i]) #abrindo o mapa de occ da sp
                    ##nameScenario = names(realNicheMap)
                    if (names(realNicheMap) != 'X000'){ #verificando se e o mapa da ocorrencia no presente
                        amostra_i = sampleOccurrences(realNicheMap,Npass[k],plot=FALSE) #realizando a amostragem
                        layers_i = stack(list.files(path=paste(envVarFolder,'/000',sep=''), pattern='asc', full.names=T)) ### stack all rasters in
                        envVar_i = extract(layers_i, amostra_i[[1]][1:2], method='bilinear', buffer=NULL, fun=NULL, df=TRUE)
                        amostra_i = cbind(amostra_i[[1]][1:2],envVar_i[,2:ncol(envVar_i)])
                    }
                    else{
                        amostra_i = sampleOccurrences(realNicheMap,Npres[j],plot=FALSE) #realizando a amostragem
                        scenarioName = basename(nicheRealPath[1:24][i])
                        scenarioName = gsub('.asc','',scenarioName)
                        layers_i = stack(list.files(path=paste(envVarFolder,'/',scenarioName,sep=''), pattern='asc', full.names=T)) ### stack all rasters in
                        envVar_i = extract(layers_i, amostra_i[[1]][1:2], method='bilinear', buffer=NULL, fun=NULL, df=TRUE)
                        amostra_i = cbind(amostra_i[[1]][1:2],envVar_i[,2:ncol(envVar_i)])
                    }
                    amostra = rbind(amostra,amostra_i)
                }

                setwd(paste(projectFolder,'Amostras/',spsTypes[h],'/',sep='')) #mudando a pasta de trabalho para os outputs
                names(amostra) = c('lon','lat',"bioclim_01","bioclim_04","bioclim_10","bioclim_11","bioclim_12","bioclim_15","bioclim_16","bioclim_17")
                write.csv(amostra,file=paste('occurrences_',g,'.csv',sep=''),row.names=FALSE)#salvando a planilha com os dados da amostra
            }
        }
    }
}

##Background points
for (g in 1:10){ #loop para replicar a 'amostragem de pontos fosseis'
    for (i in 1:length(spsTypes)){  #loop sobre os 'tipos de especies'
        backgroundPoints = data.frame()
        nicheRealFolder = paste(projectFolder,'NichoReal/',spsTypes[i],sep='') #pasta com os mapas de nicho real da sp
        nicheRealPath = list.files(path=nicheRealFolder, full.names=TRUE, pattern='.asc') #lista com os enderecos dos mapas de distribuicao da sp
        for (j in 1:length(nicheRealPath[1:24])){ #loop sobre o numero de camadas de tempo a serem amostradas
            predictors = stack(list.files(path=paste(caminhosCamadasTemp[j],sep=''),pattern='asc',full.names=TRUE)) #carregando as variaveis ambientais
            #predictors = mask(predictors,AmSulShape) #recortando as variaveis ambientais #ARRUMAR: RETIRAR, P FICAR MAIS RAPIDO
            
            #pooledOccPoints = read.csv(paste(mainSampleFolder,spsTypes[i],'/occurrences_',g,'.csv',sep=''),header=TRUE) #abrindo .csv de occ #ARRUMAR: RETIRAR ESTA LINHA (E MELHOR GERAR BACKGROUND CONSIDERANDO TUDO, E DEPOIS ELIMINAR)
            #backgroundPoints_i<- randomPoints(mask=predictors[[1]],n=200,p=pooledOccPoints[,c("lon","lat")], excludep=TRUE) #sorteando coordenadas #ARRUMAR: RETIRAR O ARGUMENTO 'P' (VIDE COMENTARIO NA LINHA ANTERIOR)
            backgroundPoints_i <- randomPoints(mask=predictors[[1]],n=100, excludep=TRUE) # 100 pontos de fundo por camada de tempo
            colnames(backgroundPoints_i) <- c("lon", "lat")
            
            ##extraindo dados da variavel climatica nos pontos de background
            ausencesVars <- extract(predictors,backgroundPoints_i,method='bilinear',buffer=NULL,fun=NULL) #extraindo variaveis ambientais nas coordenadas para cada time slice 'j'
            backgroundPoints = data.frame(rbind(backgroundPoints,data.frame(backgroundPoints_i,ausencesVars))) #dados completos dos background points
        }
        ##'limpando' os background points
        backgroundPoints1 = round(backgroundPoints, digits=3) ##ARRUMAR: RETIRAR COLUNAS DAS COORDENADAS PARA 'LIMPAR'
##        backgroundPoints1 = round(backgroundPoints[,c("bioclim_01","bioclim_04","bioclim_10","bioclim_11","bioclim_12","bioclim_15","bioclim_16","bioclim_17")], digits=4)
        backgroundPoints2 <- backgroundPoints1[!duplicated(backgroundPoints1[,1:2]),]
        backgroundPoints3 <- backgroundPoints2[complete.cases(backgroundPoints2),]
        backgroundPoints <- backgroundPoints3
        setwd(paste(projectFolder,'Amostras/',spsTypes[i],'/',sep='')) 
        write.csv(backgroundPoints,file=paste('background_',g,'.csv',sep=''),row.names=FALSE)
    }
}
