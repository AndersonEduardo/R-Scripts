

##########################################################################
#########################TESTANDO BIOMOD##################################

#myRespXY <- DataSpecies[,c("X_WGS84","Y_WGS84")]
myRespXY = dataset[,c('lon','lat')]
#myResp = rep(1,nrow(myRespXY))
myResp = dataset[,'pres']
predictors = stack(predictors)

myBiomodData <- BIOMOD_FormatingData(resp.var = myResp,
                                     expl.var = predictors,
                                     resp.xy = myRespXY,
                                     resp.name = myRespName)

myBiomodOption <- BIOMOD_ModelingOptions()

myBiomodModelOut <- BIOMOD_Modeling(
    myBiomodData,
    models = c('GLM','RF'),
    models.options = myBiomodOption,
    NbRunEval=3,
    DataSplit=50,
    Prevalence=0.5,
    VarImport=3,
    models.eval.meth = c('TSS','ROC'),
    SaveObj = TRUE,
    rescal.all.models = TRUE,
    do.full.models = FALSE,
    modeling.id = paste(myRespName,"FirstModeling",sep=""))

myBiomodProj <- BIOMOD_Projection(
    modeling.output = myBiomodModelOut,
    new.env = predictors,
    proj.name = 'current',
    selected.models = 'all',
    binary.meth = 'TSS',
    compress = 'xz',
    clamping.mask = F,
    output.format = '.grd'
)



##RODANDO SDMs com BIOMOD
projectFolder = "/home/anderson/Documentos/Minha produção bibliográfica/Sps artificiais/" #pasta do projeto
spsTypes = c('spHW', 'spHD', 'spCD') #nomes das especies

for (i in 1:length(spsTypes)){

    sampleFolder = paste(mainSampleFolder,spsTypes[i],sep='') #pasta com os mapas de nicho real da sp
    samplePaths = list.files(path=sampleFolder, full.names=T, pattern='.csv') #lista com os enderecos dos mapas de distribuicao da sp
    predictors = stack(list.files(path=envVarPaths[1],full.names=T, pattern='.asc')) #predictors com todas as variaveis
    predictors = mask(predictors,AmSulShape) #recortando as variaveis ambientais
    sp.data = read.csv(paste(samplePaths[2],sep=''),header=TRUE) #abrindo a planilha de pontos de occ amostrados
    names(sp.data) = c('lon','lat',"bioclim_01","bioclim_04","bioclim_10","bioclim_11","bioclim_12","bioclim_15","bioclim_16","bioclim_17")
    pseudoausencia1.occ <- randomPoints(mask=predictors[[1]], n=nrow(sp.data), p=sp.data[,1:2], excludep=TRUE) #este sera usado no loop para gerar ausencias de teste, la embaixo
    pseudoausencia2.occ <- round(pseudoausencia1.occ[,1:2], digits=4)
    pseudoausencia3.occ <- pseudoausencia2.occ[!duplicated(pseudoausencia2.occ),]
    pseudoausencia4.occ <- pseudoausencia3.occ[complete.cases(pseudoausencia3.occ),]
    pseudoausencia.occ <- data.frame(pseudoausencia4.occ)
    colnames(pseudoausencia.occ) <- c("lon", "lat")
    pseudoausencia.clim <- extract(predictors, pseudoausencia.occ, method='bilinear', buffer=NULL, fun=NULL, df=TRUE)
    pres = c(rep(1, nrow(sp.data)),rep(0, nrow(pseudoausencia.clim)))
    pseudoausencia.data <- cbind(pseudoausencia.occ,pseudoausencia.clim[2:ncol(pseudoausencia.clim)])
    dataset = data.frame(rbind(sp.data,pseudoausencia.data))
    dataset = cbind(dataset,pres)

    setwd(paste(projectFolder,'/BioMOD',sep=''))

    myRespName = paste(spsTypes[i])
    myRespXY = dataset[,c('lon','lat')]
    myResp = dataset[,'pres']
    predictors = stack(predictors)
    myBiomodData <- BIOMOD_FormatingData(resp.var = myResp,
                                     expl.var = predictors,
                                     resp.xy = myRespXY,
                                     resp.name = myRespName)

    myBiomodOption <- BIOMOD_ModelingOptions()

    myBiomodModelOut <- BIOMOD_Modeling(
        myBiomodData,
        models = c('GLM','RF'),
        models.options = myBiomodOption,
        NbRunEval=3,
        DataSplit=75,
        VarImport=3,
        models.eval.meth = c('TSS','ROC'),
        SaveObj = TRUE,
        rescal.all.models = TRUE,
        do.full.models = FALSE,
        modeling.id = paste(myRespName,"FirstModeling",sep=""))
    
    myBiomodProj <- BIOMOD_Projection(
        modeling.output = myBiomodModelOut,
        new.env = predictors,
        proj.name = 'current',
        selected.models = 'all',
        binary.meth = 'TSS',
        compress = 'xz',
        clamping.mask = F,
        output.format = '.grd'
    )
}


    
    

