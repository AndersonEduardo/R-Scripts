names(lis)
lis[1]
lis[3]
lis[[3]]
lis=list()
lis[[1]]=c(1:5)
lis
lis[[2]]=c(1:5)
lis
dim(lis)
dim(lis[1])
lis[1]
lis[[1]]
lis[[1]][1]
dir()
rastersList
rastersList[[1]]
rastersList[[1]][1]
names(rastersList[[1]][1])
names(rastersList[[1]])
names(rastersList[[1]])[1]
dim(rasterValues)
length(rasterValues)
head(rasterValues)
rasterValues
rastersList
names(rastersList)==names(rastersList)
names(rastersList)[1]==names(rastersList)[1]
names(rastersList)[1]
names(rastersList)
rastersList
rastersList[[1]]
names(rastersList[[1]])
names(rastersList[[1]])[1]
names(rastersList[[1]])[1]==names(rastersList[[1]])[1]
names(rastersList[[1]])==names(rastersList[[1]])
names(rastersList[[1]])==names(rastersList)
names(rastersList[[1]])[1]==names(rastersList[[1]])
while
{}
while (names(rastersList[[1]])[1]==names(rastersList[[1]])){print "TUE"}
while (names(rastersList[[1]])[1]==names(rastersList[[1]])){print("TUE")}
if (names(rastersList[[1]])[1]==names(rastersList[[1]])){print("TUE")}
if (names(rastersList[[1]])[1]==names(rastersList[[1]])){print("TUE")}
when
if (names(rastersList[[1]])[3]==names(rastersList[[1]])){print("TUE")}
if (names(rastersList[[1]])[3]==names(rastersList[[1]]))
)
names(rastersList[[1]])[3]==names(rastersList[[1]])
rasterList[[1]][1]
names(rasterList[[1]][1])
names(rasterList[[1]])[1]
names(rastersList[[1]])[1]
names(rastersList[[1]])[1]==names(rastersList[[2]])[1]
names(rastersValues[[1]])[1]
rastersValues[[1]])[1]
rastersValues[[1]][1]
rastersValues[[1]]
j
clear
dim(rastersValues)
dim(rastersValues[[1]])
j=2
names(rastersList)
names(rastersList[[1]])
occ.sps
occ.sps=occ.sps[c(1,3,5,7,8)]
rastersList[[1]]
j=1
i=1
dir()
getwd()
names(rastersList)
names(rastersList[[1]])
j
names(rastersList[1])
list.files(paste(getwd()),full.names=TRUE,pattern='.asc')
x=list.files(paste(getwd()),full.names=TRUE,pattern='.asc')
x[1]
xstack = stack(x[1],x[1])
xstack = stack(c(x[1],x[1]))
xstack = stack(c(x[1],x[2]))
xstack = stack(c(x[1:2])
)
x[1]
x=stack(x)
x
getwd()
dir()
rastersList
x=list.files(paste(getwd()),full.names=TRUE,pattern='.asc')
rastersList[[j]] = stack(x)
x
stack(c(x))
q()
n
q()
n
occ.sps
occ.sps=occ.sps[c(1,3,5,7,8)]
occ.sps
i=1
j=1
dir()
filesPass
filesPass
Richards CL, Carstens BC, Lacey Knowles L. 2007. Distribution modelling and statistical
phylogeography: an integrative framework for generating and testing alternative
biogeographical hypotheses. J. Biogeogr. 34(11):1833–45.
Rissler, L. J., & Apodaca, J. J. (2007). Adding more ecology into species delimitation: ecological
niche models and phylogeography help define cryptic species in the black salamander
(Aneides flavipunctatus). Systematic Biology , 56 (6), 924–942.
http://doi.org/10.1080/10635150701703063
Rodríguez-Sánchez, F., & Arroyo, J. (2008). Reconstructing the demise of Tethyan plants: Climate-
driven range dynamics of Laurus since the Pliocene. Global Ecology and Biogeography , 17 (6),
685–695. http://doi.org/10.1111/j.1466-8238.2008.00410.x
Sánchez, B., Prado, J. L., & Alberdi, M. T. (2006). Ancient feeding, ecology and extinction of
Pleistocene horses from the Pampean Region, Argentina. Ameghiniana , 43 (2), 427–436.
Scott, E. (2010). Extinctions, scenarios, and assumptions: Changes in latest Pleistocene large
herbivore abundance and distribution in western North America. Quaternary International ,
217 (1-2), 225–239. doi:10.1016/j.quaint.2009.11.003
Singarayer, J.S. & Valdes, P.J. (2010) High-latitude climate sensitivity to ice-sheet forcing over the
last 120kyr. Quaternary Science Reviews , 29, 43–55.
Sutherland G.D., Harestad A.S., Price K., Lertzman K.P., 2000. Scaling of natal dispersal distances
in terrestrial birds and mammals. Conserv. Ecol. 4: 16.
Svenning J-C, Fløjgaard C, Marske KA, Nogu ́es-Bravo D, Normand S. 2011. Applications of species
filesPass
filesPass
test=getValues(filesPass[1])
a=matrix(10,3)
a
random(1)
runif(10)
runif()
runif(1)
a=matrix(runif(1),5,5)
a
b=matrix(runif(1),5,5)
cor
ctest = cor(a,b)
a
b
ctest = cor(a,b)
ctest = cor(c(a,b))
ctest = cor(a,b)
ctest
cor.test(a,b)
av=1:10
bv=runif(3,10)
bv
bv=runif(3)
bv
bv=runif(10)
cor(av,bv)
cor.test(av,bv)
ands=stack(a,b)
ands=stack(c(a,b))
a
b
a+1
a=a+1
cor(a,b)
cov(a,b)
var(a,b)
cor(a)
cor(b)
cov(b)
cor(1:10,2,11)
cor(1:10,2:11)
a
b
a=matrix(1:5,5)
a
a=matrix(1:5,5,5)
a
b=matrix(10:15,5,5)
b=matrix(11:15,5,5)
b
cor(a)
cor(a,b)
cor.test(a,b)
cov(a,b)
cor(a,b)
cormat = layerStats(species.layers,'person')
raster::layerStats(species.layers,'person')
species.layers
raster::layerStats(species.layers,'person')
?layerStats
raster::layerStats(species.layers,'pearson')
filesPass
getwd()
head(filesPass)
dim(species.layers)
dim(species.layers[[1]])
dim(species.layers[[2]])
dim(species.layers[[3]])
dim(species.layers[[4]])
names(species.layers[[4]])
names(species.layers[[1]])
dim(species.layers[[1]])
names(species.layers[[1]][,,1])
plot(species.layers[[1]]$"Myocastor_coypus.19_K_years_BP")
plot(species.layers[[1]][,,15])
names(species.layers[[1]])
names(species.layers[[1]])[1]
paste(species.layers[[1]]$,names(species.layers[[1]])[1],sep="")
paste("species.layers[[1]]$",names(species.layers[[1]])[1],sep="")
plot(paste("species.layers[[1]]$",names(species.layers[[1]])[1],sep=""))
plot(paste(species.layers[[1]],"$",names(species.layers[[1]])[1],sep=""))
(paste(species.layers[[1]],"$",names(species.layers[[1]])[1],sep=""))
print(paste(species.layers[[1]],"$",names(species.layers[[1]])[1],sep=""))
print('paste(species.layers[[1]]',"$",names(species.layers[[1]])[1],sep=""))
print("paste(species.layers[[1]]","$",names(species.layers[[1]])[1],sep=""))
print("paste(species.layers[[1]]","$",names(species.layers[[1]])[1],sep="")
plot("paste(species.layers[[1]]","$",names(species.layers[[1]])[1],sep="")
plot(paste(species.layers[[1]]$,names(species.layers[[1]])[1],sep="")
plot(paste(species.layers[[1]]$,names(species.layers[[1]])[1],sep=""))
plot(paste(species.layers[[1]]$,names(species.layers[[1]])[1],sep=""))
plot(paste(species.layers[[1]]$names(species.layers[[1]])[1],sep=""))
plot(species.layers[[1]]$names(species.layers[[1]])[1],sep="")
plot(species.layers[[1]]$names(species.layers[[1]])[1])
plot(species.layers[[1]]$,paste(names(species.layers[[1]])[1]))
plot(species.layers[[1]],paste(names(species.layers[[1]])[1]))
names(species.layers[[1]])[1]
plot(species.layers[[1]],paste(names(species.layers[[1]])[1]))
i
j
cor.test = cor( species.layers[[i]],paste(names(species.layers[[i]])[j]),species.layers[[i]],paste(names(species.layers[[i]])[j]),"pairwise.complete.obs" )
cor.test = cor( species.layers[[i]],paste(names(species.layers[[i]])[j]),species.layers[[i]],paste(names(species.layers[[i]])[j]),use="pairwise.complete.obs" )
cor.test = cor( c(species.layers[[i]],paste(names(species.layers[[i]])[j]),species.layers[[i]],paste(names(species.layers[[i]])[j])),use="pairwise.complete.obs" )
cor.test = cor( getValues(species.layers[[i]],paste(names(species.layers[[i]])[j]),species.layers[[i]]),getValues(paste(names(species.layers[[i]])[j])),use="pairwise.complete.obs" )
plot(species.layers[[i]],paste(names(species.layers[[i]])[j]))
ands=getValues(species.layers[[i]],paste(names(species.layers[[i]])[j]))
ands=getValues(species.layers[[1]])
plot(ands[[i]],paste(names(ands[[i]])[j]))
dim(ands)
dim(species.layers[[1]])
ands=stack(filesPass[1],filesPass[2])
raster::layerStats(ands,'pearson')
ands=stack(species.layers[[1]]$Caiman_crocodilus.10_K_years_BP,filesPass[2]$Caiman_crocodilus.10_K_years_BP)
ands=stack(species.layers[[1]]$"Caiman_crocodilus.10_K_years_BP",filesPass[2]$"Caiman_crocodilus.10_K_years_BP")
x
x=[]
x=append(1)
x=append(x,1)
append()
append
x=append(1,x)
append(x,1)
x
x=[]
x=numeric()
append(x,1)
x
x=append(x,1)
x
x
x
x=append(x,1)
x
x.append(1)
x::append(1)
x=append(1)
filesPass
1:1
1:2
getwd()
dir()
j
i
filesPass
filesPass
layersToCompare
filesPass
filesPass[1]
i
i=1
j=1
layersToCompare
x
layersToCompare
layersToCompare
j=2
gewd()
getwd()
layersToCompare
cormatrices[[1]]
cor.matrices[[1]]
plot(cor.matrices[[1]])
plot(cor.matrices)
plot(cor.matrices[1])
plot(cor.matrices[[1]])
cor.matrices
cor.matrices[[1]]
names(cor.matrices[[1]])=c('Maxent')
cor.matrices[[1]]
cor.matrices
names(cor.matrices)=c('Maxent','GLM','RF')
cor.matrices
as.data.frame(cor.matrices)
cor.matrices
cor.matrices
table(cor.matrices)
cor.matrices
data.frame(cor.matrices)
as.data.frame(cor.matrices)
names(cor.matrices)=c('Maxent','GLM','Random Forest')
cor.matrices
data.frame(cor.matrices)
cor.matrices
?data.frame
cor.matrices
cor.matrices
cor.matrices
cor.matrices
cor.matrices
cor.matrices
data.frame(cor.matrices)
cor.matrices
cor.matrix
cor.list
cor.list
cor.list
cor.list[[1]]
plot(cor.list[[1]])
plot(cor.list[[16]])
plot(cor.list[[17]])
plot(cor.list[[15]])
plot(cor.list[[15]])
plot(cor.list[[15]])
cor.list[[15]]
cor.list[[1]]
cor.list[[3]]
cor.list[[4]]
cor.list[[5]]
cor.list[[6]]
cor.list[[7]]
cor.list[[8]]
cor.list[[9]]
cor.list[[10]]
cor.list[[11]]
cor.list[[12]]
cor.list[[13]]
cor.list[[14]]
cor.list[[15]]
cor.list[[16]]
cor.list[[1]]
cor.list[[12]
]
cor.list[[2]]
cor.list[[3]]
cor.list[[4]]
cor.list[[5]]
cor.list[[4]]
cor.list[[6]]
cor.list[[7]]
cor.list[[8]]
cor.list[[9]]
cor.list[[10]]
cor.list[[101]
]
cor.list[[11]]
cor.list[[12]]
cor.list[[13]]
paste("/home/anderson/R/PosDoc/teste/correlacoes.csv",sep="")
names(cor.matrix)
names(layersToCompare)
col.names(layersToCompare)
colnames(layersToCompare)
layersTocompare
layersToCompare
q()
n
summary(modelo)
?predict
?predict.glm
projecao2=predict.glm(modelo,type='response') #calculando a projecao
points(projecao2,col='red',cex=2)
legend(150,25.5,pch=c(20,20),col=c("black","red"),c("Presente","2070"))
points(fitted(modelo)~dados$temp,col='blue',cex=3)
points(projecao2~dados$temp,col='green',cex=2.2)
points(projecao2~dados$temp21,col='yellow',cex=1.9)
fitted(modelo)
fitted(modelo)[1:5]
predicted(modelo)
predict(modelo)[1:5]
predict(modelo,data.frame(data$temp21))[1:5]
predict(modelo,as.data.frame(data$temp21))[1:5]
predict(modelo,as.data.frame(data$temp21)[1:5])
predict(modelo,as.data.frame(data$temp21[1:5]))
predict(modelo,as.data.frame(data$temp21))
predict(modelo,as.data.frame(dados$temp21)[1:5])
predict(modelo,as.data.frame(dados$temp21)[1:5,])
predict(modelo,as.data.frame(dados$temp21))[1:5]
predict(modelo)[1:5]
fitted(modelo)[1:5]
?legend
legend('bottomleft',legend=c("A","B","C"),pch=20,cex=2,col=c('blue','black','red',alpha=0.5),pt.cex=4)
?legend
?text
?legend
?legend
?legend
?legend
?legend
?legend
boxplot(dados$temp,dados$temp21)
fitted(modelo)[1:5]
predict(modelo)[1:5]
predict(modelo,dados$temp)[1:5]
predict(modelo,data.frame(dados$temp))[1:5]
predict(modelo,data.frame(dados$temp21))[1:5]
predict(modelo,data.frame(1:5))[1:5]
predict(modelo,data.frame(100:105))[1:5]
predict(modelo,data.frame(0:-159))[1:5]
predict.glm(modelo,data.frame(0:-159))[1:5]
predict.glm(modelo,newdata=data.frame(0:-159))[1:5]
predict.glm(modelo,newdata=data.frame(0:-159),type=c("link"))[1:5]
predict.glm(modelo,newdata=data.frame(0:-159),type=c("response"))[1:5]
predict.glm(object=modelo,newdata=data.frame(0:-159),type=c("terms"))[1:5]
?predict.lgm
?predict.lgm
?predict.glm
predict.glm(object=modelo,newdata=data.frame(0:-159),type="response")[1:5]
y
x
x
new.x
length(x)
length(new.x)
length(x)
length(new.x)
length(x)
length(new.x)
length(new.x2)
length(new.x2)
new.x2[1:5]
proj[1:5]
fitted(mod)[1:5]
fitted(mod)==proj
mod
rbind(x[1:5],fitted(model)[1:5])
rbind(x[1:5],fitted(mod)[1:5])
rbind(new.x[1:5],proj[1:5])
mod
mod
head(data.frame(varx=new.x))
head(dados)
head(dados)
plot(modelo)
hist(dados$tam)
modelo
projecao[1:5]
projecao[[1]][1:5]
fitted(modelo)[1:5]
modelo
projecao[[1]]
projecao[[1]][1:5]
fitted(modelo)[1:5]
dados$tem[1:5]
dados$temp[1:5]
dados$temp21[1:5]
projecao=predict.glm(modelo,dados$temp21,type='response',se.fit=T) #ERRADO
dados$tem[1:5]
projecao=predict.glm(modelo,data.frame(dados$temp21),type='response',se.fit=T) #ERRADO
projecao[1:5]
projecao[[1]][1:5]
fitted(modelo)[1:5]
hist(dados$tam)
hist(proj[[1]],add=T)
par(mfrow=c(1,2))
hist(dados$tam)
hist(proj[[1]])
hist(dados$tam)
hist(projecao[[1]])
ggplot2.histogram
?hist
median(dados$tam)
?abline
install.packages('ggplot2')
ggplot(dados$tam)
geom <- histogram(dados$tam)
geom_histogram(dados$tam)
qplot(data$tam)
qplot(data$tam,geom='histogram')
qplot(data$tam,geom="histogram")
data$tam
qplot(dados$tam,geom="histogram")
qplot(c(dados$tam,projecao[[1]]),geom="histogram")
qplot(dados$tam,geom="histogram")+qplot(projecao[[1]],geom="histogram")
geom <- histogram(dados$tam,geom="histogram")+qplot(projecao[[1]],geom="histogram")
geom_histogram(dados$tam)
ggplot(dados,aes(x=tam))
ggplot(dados,aes(x=tam,fill='red'))+geom_histogram(alpha=0.5)
ggplot(dados,aes(x=tam,fill='red'))+geom_histogram(alpha=0.5) + 
)
q()
n
q()
n
